{"version":3,"sources":["BusTimetable.tsx","App.tsx","reportWebVitals.ts","Theme.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","remarksPaper","whiteSpace","minWidth","minHeight","remarksTypography","padding","fontSize","display","justifyContent","alignItems","lineHeight","root","opacity","Remarks","props","classes","useState","open","setOpen","handleClickOpen","useCallback","handleClickClose","remarks","className","Button","variant","color","onClick","Dialog","onClose","Paper","Typography","makeColumns","busStops","shareSetting","field","flex","align","headerAlign","sortable","disableColumnMenu","valueFormatter","params","date","value","undefined","getHours","toString","padStart","getMinutes","cellClassName","now","Date","checkEnable","headerName","hide","type","start1","start2","start3","goal","renderCell","BusTimetable","timetableItems","setTimetableItems","slotToItem","slot","id","rest","Object","assign","entries","map","v","str","useEffect","axios","get","direction","then","res","data","values","catch","alert","Accordion","style","AccordionSummary","expandIcon","ExpandMore","fontWeight","children","AccordionDetails","rows","columns","busStop","autoPageSize","autoHeight","App","userPosition","setUserPosition","initializeUserPosition","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude","error","code","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","primary","main","blue","secondary","green","typography","fontFamily","join","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gWA+DMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,aAAc,CACZC,WAAY,WACZC,SAAU,IACVC,UAAW,KAEbC,kBAAmB,CACjBC,QAAS,OACTC,SAAU,OACVC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,WAAY,QAEdC,KAAM,CACJ,aAAc,CACZC,QAAS,IAEX,kBAAmB,CACjBX,WAAY,WACZC,SAAU,IACVC,UAAW,KAEb,uBAAwB,CACtBE,QAAS,OACTC,SAAU,OACVC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,WAAY,aAMZG,EAAyC,SAACC,GAC9C,IAAMC,EAAUlB,IAChB,EAAwBmB,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAkBC,uBAAY,kBAAMF,GAAQ,KAAO,IACnDG,EAAmBD,uBAAY,kBAAMF,GAAQ,KAAQ,IAE3D,MAAyB,KAAlBJ,EAAMQ,QACX,sBAAKC,UAAWR,EAAQJ,KAAxB,UACE,cAACa,EAAA,EAAD,CAAQC,QAAS,YAAaC,MAAM,UAAUC,QAASR,EAAvD,0BAGA,cAACS,EAAA,EAAD,CAAQX,KAAMA,EAAMY,QAASR,EAA7B,SACE,cAACS,EAAA,EAAD,CAAOP,UAAWR,EAAQf,aAA1B,SACE,cAAC+B,EAAA,EAAD,CAAYR,UAAWR,EAAQX,kBAA/B,SACGU,EAAMQ,iBAMf,8BAKEU,EAAoD,SAACC,GAEzD,IAsBMC,EAA2B,CAC/BC,MAAO,GACPC,KAAM,EACNC,MAAO,SACPC,YAAa,SACbC,UAAU,EACVC,mBAAmB,EACnBC,eA7BqB,SAACC,GACtB,IAAMC,EAAOD,EAAOE,MACpB,YAAgBC,IAATF,EAAA,UACAA,EACAG,WACAC,WACAC,SAAS,EAAG,KAJZ,YAIoBL,EAAKM,aAAaF,WAAWC,SAAS,EAAG,MAChEL,GAuBJO,cAAe,SAACR,GAAD,OApBG,SAACA,GACnB,IAAMC,EAAOD,EAAOE,MACdO,EAAM,IAAIC,KAChB,OACGT,GACDA,EAAKG,WAAaK,EAAIL,YACrBH,EAAKG,aAAeK,EAAIL,YACvBH,EAAKM,cAAgBE,EAAIF,aAaDI,CAAYX,GAAU,GAAK,YAuCzD,MAnC8B,CAC5B,CAAEY,WAAY,KAAMnB,MAAO,KAAMoB,MAAM,EAAMC,KAAM,UADvB,2BAEvBtB,GAFuB,IAEToB,WAAW,GAAD,OAAKrB,EAASwB,OAAd,UAAyBtB,MAAO,UAFjC,2BAIvBD,GAJuB,IAK1BoB,WAAW,GAAD,OAAKrB,EAASyB,OAAd,UACVvB,MAAO,OACPC,KAAM,IAPoB,2BAUvBF,GAVuB,IAW1BoB,WAAW,GAAD,OAAKrB,EAAS0B,OAAd,UACVxB,MAAO,OACPC,KAAM,IAboB,2BAgBvBF,GAhBuB,IAiB1BoB,WAAW,GAAD,OAAKrB,EAAS2B,KAAd,UACVzB,MAAO,OACPC,KAAM,IAnBoB,2BAsBvBF,GAtBuB,IAuB1BoB,WAAY,eACZnB,MAAO,UACPC,KAAM,EACNC,MAAO,SACPI,oBAAgBI,EAChBK,mBAAeL,EACfgB,WAAY,SAAoBnB,GAC9B,OAAO,cAAC,EAAD,CAASpB,QAASoB,EAAOE,aAS3BkB,EAIR,SAAChD,GACJ,MAA4CE,mBAA0B,IAAtE,mBAAO+C,EAAP,KAAuBC,EAAvB,KACMjD,EAAUlB,IAGVoE,EAAa7C,uBACjB,SAAC8C,EAAqBC,GAEpB,IAGQ7C,EAAqB4C,EAArB5C,QAAY8C,EAApB,YAA6BF,EAA7B,aAEA,OAAOG,OAAOC,OAAP,MAAAD,OAAM,CACX,CAAE/C,UAAS6C,OADA,mBAERE,OAAOE,QAAQH,GAAMI,KAAI,SAACC,GAAD,sBAAWA,EAAE,GANjC,MADYC,EAOuCD,EAAE,IANhD,IAAIrB,KAAKsB,QAAO7B,GADV,IAAC6B,UAUxB,IAWF,OAPAC,qBAAU,WACRC,IACGC,IADH,UApKF,mHAoKE,sBACuD/D,EAAMgE,YAC1DC,MAAK,SAACC,GAAD,OAAShB,EAAkBgB,EAAIC,KAAKC,OAAOV,IAAIP,OACpDkB,OAAM,kBAAMC,MAAM,2HACpB,CAACtE,EAAMgE,UAAWb,IAGnB,qBAAK1C,UAAWR,EAAQJ,KAAxB,SACE,eAAC0E,EAAA,EAAD,CAAWC,MAAO,CAAEpF,SAAU,SAA9B,UACE,cAACqF,EAAA,EAAD,CACEC,WAAY,cAACC,EAAA,EAAD,IACZH,MAAO,CAAEI,WAAY,QAFvB,SAGG5E,EAAM6E,WAET,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CACEC,KAAM9B,EACN+B,QAAS9D,EAAYlB,EAAMiF,SAC3BC,cAAY,EACZC,YAAU,Y,mDCvLPC,EAvDO,WACpB,MAAwClF,qBAAxC,mBAAOmF,EAAP,KAAqBC,EAArB,KAEMC,EAAyBjF,uBAAY,WAezCkF,UAAUC,YAAYC,oBAZN,SAACC,GACfC,QAAQC,IACN,eAAOF,EAASG,OAAOC,SACvB,eAAOJ,EAASG,OAAOE,WAEzBV,EAAgBK,MAGL,SAACM,GACZ3B,MAAM,uIAA2B2B,EAAMC,WAIxC,IAIH,OAFArC,oBAAU0B,EAAwB,CAACA,IAGjC,gCACE,cAAC,EAAD,CACEvB,UAAW,UACXiB,QAAS,CACPtC,OAAQ,qBACRC,OAAQ,2BACRC,OAAQ,iCACRC,KAAM,sBAER6C,SAAUN,EARZ,SASE,gCACE,cAAC,IAAD,IADF,IACgB,cAAC,IAAD,IADhB,IACqC,cAAC,IAAD,IADrC,uBAIF,cAAC,EAAD,CACErB,UAAW,WACXiB,QAAS,CACPtC,OAAQ,qBACRC,OAAQ,iCACRC,OAAQ,2BACRC,KAAM,sBAER6C,SAAUN,EARZ,SASE,gCACE,cAAC,IAAD,IADF,IACiB,cAAC,IAAD,IADjB,IACsC,cAAC,IAAD,IADtC,2BCvCOc,EAZS,SAACC,GACnBA,GACF,8BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,O,iCCNDnH,EAAQyH,YAAe,CAClCC,QAAS,CACPC,QAAS,CACPC,KAAMC,IAAK,MAEbC,UAAW,CACTF,KAAMG,IAAM,OAGhBC,WAAY,CACVC,WAAY,CACV,gBACA,qBACA,aACA,eACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,Q,OCjBXC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAkBrI,MAAOA,EAAzB,SACE,cAAC,EAAD,QAGJsI,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.f368db55.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  DataGrid,\r\n  GridCellClassParams,\r\n  GridColDef,\r\n  GridValueFormatterParams,\r\n} from '@material-ui/data-grid';\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Dialog,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { ExpandMore } from '@material-ui/icons';\r\n\r\n//行き帰りか\r\ntype Direction = 'outward' | 'homeward';\r\n\r\n//バス停のある場所\r\ntype BusStop = '千歳駅' | '南千歳駅' | '研究実験棟' | '本部棟';\r\n\r\n//移動順\r\ntype BusStops = {\r\n  start1: BusStop;\r\n  start2: BusStop;\r\n  start3: BusStop;\r\n  goal: BusStop;\r\n};\r\n\r\n//テーブルの表示要素のみ\r\ntype TimetableSlot = {\r\n  start: string;\r\n  via1: string;\r\n  via2: string;\r\n  goal: string;\r\n  remarks: string;\r\n};\r\n\r\n//テーブルのカラム\r\ntype TimetableItem = {\r\n  id: number;\r\n  start?: Date;\r\n  via1?: Date;\r\n  via2?: Date;\r\n  goal: Date;\r\n  remarks: string;\r\n  isEnable: boolean;\r\n};\r\n\r\n//GASの返り値\r\ntype GasResponse = {\r\n  values: TimetableSlot[];\r\n};\r\n\r\n//GAS APIのURL\r\nconst gasGetBusTimetable =\r\n  'https://script.google.com/macros/s/AKfycbyFqCdqeo0DvFUJE8KCM3-6OzwckqNJGstPRtpppYbIu-JUmi_eUo_SkwpUmWhwlF4c/exec';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  remarksPaper: {\r\n    whiteSpace: 'pre-wrap',\r\n    minWidth: 300,\r\n    minHeight: 300,\r\n  },\r\n  remarksTypography: {\r\n    padding: '2rem',\r\n    fontSize: '2rem',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    lineHeight: '3rem',\r\n  },\r\n  root: {\r\n    '& .disable': {\r\n      opacity: 0.5,\r\n    },\r\n    '& .remarksPaper': {\r\n      whiteSpace: 'pre-wrap',\r\n      minWidth: 300,\r\n      minHeight: 300,\r\n    },\r\n    '& .remarksTypography': {\r\n      padding: '2rem',\r\n      fontSize: '2rem',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      lineHeight: '3rem',\r\n    },\r\n  },\r\n}));\r\n\r\n//テーブルの備考欄のコンポーネント\r\nconst Remarks: React.FC<{ remarks: string }> = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const handleClickOpen = useCallback(() => setOpen(true), []);\r\n  const handleClickClose = useCallback(() => setOpen(false), []);\r\n\r\n  return props.remarks !== '' ? (\r\n    <div className={classes.root}>\r\n      <Button variant={'contained'} color=\"primary\" onClick={handleClickOpen}>\r\n        備考\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClickClose}>\r\n        <Paper className={classes.remarksPaper}>\r\n          <Typography className={classes.remarksTypography}>\r\n            {props.remarks}\r\n          </Typography>\r\n        </Paper>\r\n      </Dialog>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\n//DataGridの行の作成･設定\r\nconst makeColumns: (busStops: BusStops) => GridColDef[] = (busStops) => {\r\n  //時刻表示を0詰め、もしくは空欄に変換\r\n  const valueFormatter = (params: GridValueFormatterParams) => {\r\n    const date = params.value as Date | undefined;\r\n    return date !== undefined\r\n      ? `${date\r\n          .getHours()\r\n          .toString()\r\n          .padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\r\n      : date;\r\n  };\r\n\r\n  const checkEnable = (params: GridCellClassParams) => {\r\n    const date = params.value as Date;\r\n    const now = new Date();\r\n    return (\r\n      !date ||\r\n      date.getHours() > now.getHours() ||\r\n      (date.getHours() === now.getHours() &&\r\n        date.getMinutes() >= now.getMinutes())\r\n    );\r\n  };\r\n\r\n  //行の共通設定\r\n  const shareSetting: GridColDef = {\r\n    field: '',\r\n    flex: 2,\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    sortable: false,\r\n    disableColumnMenu: true,\r\n    valueFormatter,\r\n    cellClassName: (params) => (checkEnable(params) ? '' : 'disable'),\r\n  };\r\n\r\n  //行の設定\r\n  const columns: GridColDef[] = [\r\n    { headerName: 'ID', field: 'id', hide: true, type: 'number' },\r\n    { ...shareSetting, headerName: `${busStops.start1}発`, field: 'start' },\r\n    {\r\n      ...shareSetting,\r\n      headerName: `${busStops.start2}発`,\r\n      field: 'via1',\r\n      flex: 2,\r\n    },\r\n    {\r\n      ...shareSetting,\r\n      headerName: `${busStops.start3}発`,\r\n      field: 'via2',\r\n      flex: 2,\r\n    },\r\n    {\r\n      ...shareSetting,\r\n      headerName: `${busStops.goal}着`,\r\n      field: 'goal',\r\n      flex: 2,\r\n    },\r\n    {\r\n      ...shareSetting,\r\n      headerName: '備考',\r\n      field: 'remarks',\r\n      flex: 1,\r\n      align: 'center',\r\n      valueFormatter: undefined,\r\n      cellClassName: undefined,\r\n      renderCell: function RenderCell(params) {\r\n        return <Remarks remarks={params.value as string} />;\r\n      },\r\n    },\r\n  ];\r\n\r\n  return columns;\r\n};\r\n\r\n//時刻表本体、方向、バス停の移動順、ユーザの位置情報を引数とする\r\nexport const BusTimetable: React.FC<{\r\n  direction: Direction;\r\n  busStop: BusStops;\r\n  position?: GeolocationPosition;\r\n}> = (props) => {\r\n  const [timetableItems, setTimetableItems] = useState<TimetableItem[]>([]);\r\n  const classes = useStyles();\r\n\r\n  //APIから取得したデータを編集\r\n  const slotToItem = useCallback(\r\n    (slot: TimetableSlot, id: number): TimetableItem => {\r\n      //文字列を日付型へ\r\n      const stringToTime = (str: string) =>\r\n        str !== '' ? new Date(str) : undefined;\r\n\r\n      const { remarks, ...rest } = slot;\r\n\r\n      return Object.assign(\r\n        { remarks, id },\r\n        ...Object.entries(rest).map((v) => ({ [v[0]]: stringToTime(v[1]) }))\r\n      );\r\n    },\r\n    []\r\n  );\r\n\r\n  //ページ描画後、GAS APIからデータ取得\r\n  useEffect(() => {\r\n    axios\r\n      .get<GasResponse>(`${gasGetBusTimetable}?direction=${props.direction}`)\r\n      .then((res) => setTimetableItems(res.data.values.map(slotToItem)))\r\n      .catch(() => alert('通信に失敗しました。再読込して下さい。'));\r\n  }, [props.direction, slotToItem]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion style={{ minWidth: '40rem' }}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMore />}\r\n          style={{ fontWeight: 'bold' }}>\r\n          {props.children}\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <DataGrid\r\n            rows={timetableItems}\r\n            columns={makeColumns(props.busStop)}\r\n            autoPageSize\r\n            autoHeight\r\n          />\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { BusTimetable } from './BusTimetable';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport TrainIcon from '@material-ui/icons/Train';\r\n\r\nconst App: React.FC = () => {\r\n  const [userPosition, setUserPosition] = useState<GeolocationPosition>();\r\n\r\n  const initializeUserPosition = useCallback(() => {\r\n    // geolocation\r\n    // 経度、緯度を取得するコードです。\r\n    const success = (position: GeolocationPosition) => {\r\n      console.log(\r\n        '緯度' + position.coords.latitude,\r\n        '経度' + position.coords.longitude\r\n      );\r\n      setUserPosition(position);\r\n    };\r\n\r\n    const fail = (error: GeolocationPositionError) => {\r\n      alert('位置情報の取得に失敗しました。エラーコード：' + error.code);\r\n    };\r\n\r\n    navigator.geolocation.getCurrentPosition(success, fail);\r\n  }, []);\r\n\r\n  useEffect(initializeUserPosition, [initializeUserPosition]);\r\n\r\n  return (\r\n    <div>\r\n      <BusTimetable\r\n        direction={'outward'}\r\n        busStop={{\r\n          start1: '千歳駅',\r\n          start2: '南千歳駅',\r\n          start3: '研究実験棟',\r\n          goal: '本部棟',\r\n        }}\r\n        position={userPosition}>\r\n        <div>\r\n          <TrainIcon /> <ArrowForwardIcon /> <SchoolIcon /> (行き)\r\n        </div>\r\n      </BusTimetable>\r\n      <BusTimetable\r\n        direction={'homeward'}\r\n        busStop={{\r\n          start1: '本部棟',\r\n          start2: '研究実験棟',\r\n          start3: '南千歳駅',\r\n          goal: '千歳駅',\r\n        }}\r\n        position={userPosition}>\r\n        <div>\r\n          <SchoolIcon /> <ArrowForwardIcon /> <TrainIcon /> (帰り)\r\n        </div>\r\n      </BusTimetable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n  if (onPerfEntry) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createMuiTheme } from '@material-ui/core';\nimport { blue, green } from '@material-ui/core/colors';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[500],\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n  typography: {\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Noto Sans JP',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { MuiThemeProvider } from '@material-ui/core';\nimport { theme } from './Theme';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}