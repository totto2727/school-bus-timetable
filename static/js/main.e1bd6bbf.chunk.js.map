{"version":3,"sources":["BusTimetable.tsx","App.tsx","reportWebVitals.ts","Theme.tsx","index.tsx"],"names":["Remarks","props","useState","open","setOpen","handleClickOpen","useCallback","handleClickClose","remarks","Button","variant","color","onClick","Dialog","onClose","Paper","style","whiteSpace","minWidth","minHeight","Typography","padding","fontSize","display","justifyContent","alignItems","lineHeight","columns","valueFormatter","params","date","value","undefined","getHours","toString","padStart","getMinutes","headerName","field","hide","type","flex","align","headerAlign","renderCell","BusTimetable","timetable","setTimetable","makeTimetableItemList","slot","map","v","id","rest","Object","assign","entries","str","Date","useEffect","axios","get","direction","then","res","data","values","catch","alert","title","rows","autoPageSize","autoHeight","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","blue","secondary","green","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1bd6bbf.chunk.js","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {DataGrid, GridColDef, GridValueFormatterParams} from \"@material-ui/data-grid\";\r\nimport {\r\n    Button, Dialog, Paper, Typography,\r\n} from \"@material-ui/core\";\r\n\r\ntype Direction = \"outward\" | \"homeward\";\r\n\r\ntype TimetableSlot = {\r\n    start: string,\r\n    via1: string,\r\n    via2: string,\r\n    goal: string,\r\n    remarks: string\r\n}\r\n\r\ntype TimetableItem = {\r\n    id: number,\r\n    start?: Date,\r\n    via1?: Date,\r\n    via2?: Date,\r\n    goal?: Date,\r\n    remarks: string\r\n}\r\n\r\ntype GasResponse = {\r\n    values: TimetableSlot[]\r\n}\r\n\r\nconst gasGetBusTimetable = \"https://script.google.com/macros/s/AKfycbyLqwd2q-JoOBW3OIRH3oCMR0WhOKxICeBn9vMFQvRx2JE6J_TMxxyPhp6EEph6GFNA/exec\";\r\n\r\nconst Remarks: React.FC<{ remarks: string }> = props => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = useCallback(() => setOpen(true), [])\r\n\r\n    const handleClickClose = useCallback(() => setOpen(false), [])\r\n\r\n    return (\r\n        props.remarks !== \"\"\r\n            ? <div>\r\n                <Button variant={\"contained\"} color=\"primary\" onClick={handleClickOpen}>\r\n                    備考\r\n                </Button>\r\n                <Dialog open={open} onClose={handleClickClose}>\r\n                    <Paper style={{\r\n                        whiteSpace: \"pre-wrap\",\r\n                        minWidth: 300,\r\n                        minHeight: 300,\r\n                    }}>\r\n                        <Typography style={{\r\n                            padding: \"2rem\",\r\n                            fontSize: \"2rem\", display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                            lineHeight: \"2em\"\r\n                        }}>\r\n                            {props.remarks}\r\n                        </Typography>\r\n                    </Paper>\r\n                </Dialog>\r\n            </div>\r\n\r\n            : <></>\r\n    )\r\n}\r\n\r\nconst columns: GridColDef[] = (() => {\r\n    const valueFormatter = (params: GridValueFormatterParams) => {\r\n        const date = params.value as Date | undefined;\r\n        return date !== undefined ? `${date.getHours().toString().padStart(2, \"0\")}:${date.getMinutes().toString().padStart(2, \"0\")}` : date;\r\n    };\r\n\r\n    const columns: GridColDef[] = [\r\n        {headerName: \"ID\", field: \"id\", hide: true, type: \"number\"},\r\n        {headerName: \"発車\", field: \"start\", flex: 2, valueFormatter, align: \"center\", headerAlign: \"center\"},\r\n        {headerName: \"経由1\", field: \"via1\", flex: 2, valueFormatter, align: \"center\", headerAlign: \"center\"},\r\n        {headerName: \"経由2\", field: \"via2\", flex: 2, valueFormatter, align: \"center\", headerAlign: \"center\"},\r\n        {headerName: \"終点\", field: \"goal\", flex: 2, valueFormatter, align: \"center\", headerAlign: \"center\"},\r\n        {\r\n            headerName: \"備考\",\r\n            field: \"remarks\",\r\n            flex: 15,\r\n            renderCell: params => <Remarks remarks={params.value as string}/>\r\n        }\r\n    ]\r\n\r\n    return columns;\r\n})();\r\n\r\nexport const BusTimetable: React.FC<{ direction: Direction, title: string }> = props => {\r\n    const [timetable, setTimetable] = useState<TimetableItem[]>([]);\r\n\r\n    const makeTimetableItemList = useCallback((slot: TimetableSlot[]): TimetableItem[] => {\r\n        const stringToTime = (str: string) => str !== \"\" ? new Date(str) : undefined\r\n        return slot.map((v, id) => {\r\n            const {remarks, ...rest} = v;\r\n            return Object.assign({remarks, id}, ...Object.entries(rest).map(v => ({[v[0]]: stringToTime(v[1])})));\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get<GasResponse>(`${gasGetBusTimetable}?direction=${props.direction}`)\r\n            .then(res => setTimetable(makeTimetableItemList(res.data.values)))\r\n            .catch(()=>alert(\"データを取得できません。\\n再読込してください。\"));\r\n    }, [makeTimetableItemList, props.direction]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>{props.title}</h2>\r\n            <DataGrid rows={timetable} columns={columns} autoPageSize autoHeight/>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport {BusTimetable} from \"./BusTimetable\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <body>\n                <BusTimetable direction={\"outward\"} title={\"駅->学校\"}/>\n                <BusTimetable direction={\"homeward\"} title={\"学校->駅\"}/>\n            </body>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createMuiTheme} from \"@material-ui/core\";\r\nimport {blue, green} from \"@material-ui/core/colors\";\r\n\r\nexport const theme=createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: blue[500],\r\n        },\r\n        secondary: {\r\n            main: green[500],\r\n        },\r\n    },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport {theme} from \"./Theme\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <MuiThemeProvider theme={theme}>\n            <App/>\n        </MuiThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}