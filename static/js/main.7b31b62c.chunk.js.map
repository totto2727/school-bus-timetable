{"version":3,"sources":["BusTimetable.tsx","App.tsx","reportWebVitals.ts","Theme.tsx","index.tsx"],"names":["Remarks","props","useState","open","setOpen","handleClickOpen","useCallback","handleClickClose","remarks","Button","variant","color","onClick","Dialog","onClose","Paper","style","whiteSpace","minWidth","minHeight","Typography","padding","fontSize","display","justifyContent","alignItems","lineHeight","makeColumns","busStops","shareSetting","field","flex","valueFormatter","params","date","value","undefined","getHours","toString","padStart","getMinutes","align","headerAlign","sortable","disableColumnMenu","headerName","hide","type","start1","start2","start3","goal","renderCell","BusTimetable","timetableItems","setTimetableItems","slotToItem","slot","id","rest","Object","assign","entries","map","v","str","Date","useEffect","navigator","geolocation","getCurrentPosition","pos","console","log","coords","latitude","longitude","error","alert","code","axios","get","direction","then","res","data","values","catch","Accordion","AccordionSummary","expandIcon","ExpandMore","fontWeight","children","AccordionDetails","rows","columns","busStop","autoPageSize","autoHeight","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","primary","main","blue","secondary","green","typography","fontFamily","join","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b31b62c.chunk.js","sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {DataGrid, GridColDef, GridValueFormatterParams} from \"@material-ui/data-grid\";\r\nimport {\r\n    Accordion, AccordionDetails, AccordionSummary,\r\n    Button, Dialog, Paper, Typography,\r\n} from \"@material-ui/core\";\r\nimport {ExpandMore} from \"@material-ui/icons\";\r\n\r\ntype Direction = \"outward\" | \"homeward\";\r\n\r\ntype BusStop=\"千歳駅\"|\"南千歳駅\"|\"研究実験棟\"|\"本部棟\"\r\n\r\ntype BusStops={\r\n    start1:BusStop,\r\n    start2:BusStop,\r\n    start3:BusStop,\r\n    goal:BusStop\r\n}\r\n\r\ntype TimetableSlot = {\r\n    start: string,\r\n    via1: string,\r\n    via2: string,\r\n    goal: string,\r\n    remarks: string\r\n}\r\n\r\ntype TimetableItem = {\r\n    id: number,\r\n    start?: Date,\r\n    via1?: Date,\r\n    via2?: Date,\r\n    goal?: Date,\r\n    remarks: string\r\n}\r\n\r\ntype GasResponse = {\r\n    values: TimetableSlot[]\r\n}\r\n\r\nconst gasGetBusTimetable = \"https://script.google.com/macros/s/AKfycbyFqCdqeo0DvFUJE8KCM3-6OzwckqNJGstPRtpppYbIu-JUmi_eUo_SkwpUmWhwlF4c/exec\";\r\n\r\nconst Remarks: React.FC<{ remarks: string }> = props => {\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = useCallback(() => setOpen(true), [])\r\n\r\n    const handleClickClose = useCallback(() => setOpen(false), [])\r\n\r\n    return (\r\n        props.remarks !== \"\"\r\n            ? <div>\r\n                <Button variant={\"contained\"} color=\"primary\" onClick={handleClickOpen}>\r\n                    備考\r\n                </Button>\r\n                <Dialog open={open} onClose={handleClickClose}>\r\n                    <Paper style={{\r\n                        whiteSpace: \"pre-wrap\",\r\n                        minWidth: 300,\r\n                        minHeight: 300,\r\n                    }}>\r\n                        <Typography style={{\r\n                            padding: \"2rem\",\r\n                            fontSize: \"2rem\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                            lineHeight: \"3rem\"\r\n                        }}>\r\n                            {props.remarks}\r\n                        </Typography>\r\n                    </Paper>\r\n                </Dialog>\r\n            </div>\r\n\r\n            : <></>\r\n    )\r\n}\r\n\r\nconst makeColumns: (busStops:BusStops)=>GridColDef[] = busStops => {\r\n    const valueFormatter = (params: GridValueFormatterParams) => {\r\n        const date = params.value as Date | undefined;\r\n        return date !== undefined ? `${date.getHours().toString().padStart(2, \"0\")}:${date.getMinutes().toString().padStart(2, \"0\")}` : date;\r\n    };\r\n    const shareSetting:GridColDef={\r\n        field:\"\",\r\n        flex: 2,valueFormatter,\r\n        align: \"center\",\r\n        headerAlign: \"center\",\r\n        sortable:false,disableColumnMenu:true,\r\n    }\r\n\r\n    const columns: GridColDef[] = [\r\n        {headerName: \"ID\", field: \"id\", hide: true, type: \"number\"},\r\n        { ...shareSetting,headerName: `${busStops.start1}発`, field: \"start\"},\r\n        {...shareSetting,headerName: `${busStops.start2}発`, field: \"via1\", flex: 2},\r\n        {...shareSetting,headerName: `${busStops.start3}発`, field: \"via2\", flex: 2},\r\n        {...shareSetting,headerName: `${busStops.goal}着`, field: \"goal\", flex: 2},\r\n        {\r\n            ...shareSetting,\r\n            headerName: \"備考\",\r\n            field: \"remarks\",\r\n            flex: 1,\r\n            align: \"center\",\r\n            valueFormatter:undefined,\r\n            renderCell: params => <Remarks remarks={params.value as string}/>\r\n        }\r\n    ]\r\n\r\n    return columns;\r\n};\r\n\r\nexport const BusTimetable: React.FC<{ direction: Direction, busStop:BusStops }> = props => {\r\n    const [timetableItems, setTimetableItems] = useState<TimetableItem[]>([]);\r\n\r\n    const slotToItem = useCallback((slot: TimetableSlot, id: number): TimetableItem => {\r\n            const stringToTime = (str: string) => str !== \"\" ? new Date(str) : undefined;\r\n            const {remarks, ...rest} = slot;\r\n            return Object.assign({remarks, id}, ...Object.entries(rest).map(v => ({[v[0]]: stringToTime(v[1])})));\r\n        }\r\n        , [])\r\n\r\n    useEffect(() => {\r\n        // geolocation\r\n        // 経度、緯度を取得するコードです。\r\n        navigator.geolocation.getCurrentPosition(success, fail);\r\n\r\n        function success(pos : any):void {\r\n            console.log('緯度' + pos.coords.latitude, '経度' + pos.coords.longitude);\r\n        }\r\n\r\n        function fail(error : any) {\r\n            alert('位置情報の取得に失敗しました。エラーコード：' + error.code);\r\n        }\r\n\r\n        axios\r\n            .get<GasResponse>(`${gasGetBusTimetable}?direction=${props.direction}`)\r\n            .then(res => setTimetableItems(res.data.values.map(slotToItem)))\r\n            .catch(() => alert(\"通信に失敗しました。再読込して下さい。\"));\r\n    }, [props.direction, slotToItem]);\r\n\r\n    return (\r\n        <div>\r\n            <Accordion style={{minWidth:\"40rem\"}}>\r\n                <AccordionSummary expandIcon={<ExpandMore/>}>\r\n                    <Typography style={{fontWeight:\"bold\"}}>{props.children}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <DataGrid rows={timetableItems} columns={makeColumns(props.busStop)} autoPageSize autoHeight/>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {BusTimetable} from \"./BusTimetable\";\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport TrainIcon from '@material-ui/icons/Train';\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <body>\r\n                <BusTimetable\r\n                    direction={\"outward\"}\r\n                    busStop={{\r\n                        start1:\"千歳駅\",\r\n                        start2:\"南千歳駅\",\r\n                        start3:\"研究実験棟\",\r\n                        goal:\"本部棟\"\r\n                    }}>\r\n                    <div><TrainIcon />{' '}<ArrowForwardIcon />{' '}<SchoolIcon />{' '}(行き)</div>\r\n                    </BusTimetable>\r\n                <BusTimetable\r\n                    direction={\"homeward\"}\r\n                    busStop={{\r\n                        start1:\"本部棟\",\r\n                        start2:\"研究実験棟\",\r\n                        start3:\"南千歳駅\",\r\n                        goal:\"千歳駅\"\r\n                    }}\r\n                >\r\n                    <div><SchoolIcon />{' '}<ArrowForwardIcon />{' '}<TrainIcon />{' '}(帰り)</div>\r\n                </BusTimetable>\r\n            </body>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createMuiTheme} from \"@material-ui/core\";\r\nimport {blue, green} from \"@material-ui/core/colors\";\r\n\r\nexport const theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: blue[500],\r\n        },\r\n        secondary: {\r\n            main: green[500],\r\n        },\r\n\r\n    },\r\n    typography: {\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Noto Sans JP',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n        ].join(',')\r\n    }\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {MuiThemeProvider} from \"@material-ui/core\";\nimport {theme} from \"./Theme\";\nimport \"./index.css\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <MuiThemeProvider theme={theme}>\n            <App/>\n        </MuiThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}